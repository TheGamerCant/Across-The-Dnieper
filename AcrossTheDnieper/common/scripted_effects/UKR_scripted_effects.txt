make_borders_look_nice={
	every_state={
		limit = { has_state_flag = STATE_CONTROLLED_BY_UKRAINE }
		UKR = { transfer_state = PREV }
		clr_state_flag = STATE_CONTROLLED_BY_UKRAINE
	}

	if={
		limit = { 
			146 = { is_controlled_by = DON }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		DON = { transfer_state = 186 }
	}
	if={
		limit = { 
			131 = { is_controlled_by = LHK }
			152 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 131 }
		LHK = { transfer_state = 152 }
		
	}
	else_if={
		limit = { 
			155 = { is_controlled_by = LHK }
			152 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 155 }
		LHK = { transfer_state = 152 }
		if={
			limit = { 154 = { is_controlled_by = LHK } }
			UKR = { transfer_state = 154 }
		}
		
	}	
	if={
		limit = { 
			136 = { is_controlled_by = LHK }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 136 }
		DON = { transfer_state = 186 }
		
	}
	if={
		limit = { 
			135 = { is_controlled_by = DON }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		DON = { transfer_state = 186 }
		
	}
	if={
		limit = { 
			166 = { is_controlled_by = DON }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		DON = { transfer_state = 186 }
	}
	else_if={
		limit = { 
			166 = { is_controlled_by = DON }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		DON = { transfer_state = 208 }
	}
	if={
		limit = { 
			135 = { is_controlled_by = DON }
			186 = { is_controlled_by = DON }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		DON = { transfer_state = 208 }
	}
	else_if={
		limit = { 
			146 = { is_controlled_by = DON }
			186 = { is_controlled_by = DON }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		DON = { transfer_state = 208 }
	}
	if={
		limit = { 
			131 = { is_controlled_by = LHK }
			186 = { is_controlled_by = DON }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 131 }
		DON = { transfer_state = 208 }
	}	
	if={
		limit = { 
			103 = { is_controlled_by = LHK }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 103 }
		LHK = { transfer_state = 136 }
	}	
	if={
		limit = { 
			109 = { is_controlled_by = LHK }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 109 }
		LHK = { transfer_state = 136 }
	}	
	if={
		limit = { 
			166 = { is_controlled_by = DON }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		LHK = { transfer_state = 155 }
	}
	if={
		limit = { 
			146 = { is_controlled_by = DON }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		LHK = { transfer_state = 155 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = UKR }
			155 = { is_controlled_by = LHK }
		}
		UKR = { transfer_state = 155 }
		DON = { transfer_state = 208 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = DON }
			230 = { is_controlled_by = DON }
			186 = { is_controlled_by = DON }
			166 = { is_controlled_by = DON }
			173 = { is_controlled_by = DON }
			146 = { is_controlled_by = DON }
			
			195 = { is_controlled_by = UKR }
			135 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		DON = { transfer_state = 195 }
	}
	if={
		limit = { 
			152 = { is_controlled_by = LHK }
			146 = { is_controlled_by = DON }
			
			135 = { is_controlled_by = UKR }
			131 = { is_controlled_by = UKR }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		LHK = { transfer_state = 136 }
	}
	if={
		limit = { 
			135 = { is_controlled_by = DON }
			146 = { is_controlled_by = DON }
			136 = { is_controlled_by = LHK }
			
			131 = { is_controlled_by = UKR }
			166 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		LHK = { transfer_state = 131 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = DON }
			173 = { is_controlled_by = DON }
			
			186 = { is_controlled_by = UKR }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 208 }
		LHK = { transfer_state = 155 }
	}
	if={
		limit = { 
			195 = { is_controlled_by = DON }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 195 }
		LHK = { transfer_state = 155 }
	}
	if={
		limit = { 
			136 = { is_controlled_by = LHK }
			173 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 136 }
		DON = { transfer_state = 173 }
	}
	if={
		limit = { 
			230 = { is_controlled_by = DON }
			208 = { is_controlled_by = DON }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 230 }
		DON = { transfer_state = 186 }
	}
	if={#Keep this at bottom
		limit = { 
			154 = { is_controlled_by = LHK }
			155 = { is_controlled_by = UKR }
			136 = { is_controlled_by = UKR }
			131 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 154 }
	}
	if={
		limit = { 
			154 = { is_controlled_by = UKR }
			155 = { is_controlled_by = LHK }
			136 = { is_controlled_by = LHK }
			131 = { is_controlled_by = LHK }
		}
		LHK = { transfer_state = 154 }
	}
	
	

	
	if={			#Have same effects repeat of Novorossiya
		limit = { 
			146 = { is_controlled_by = NOV }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		NOV = { transfer_state = 186 }
	}
	if={
		limit = { 
			131 = { is_controlled_by = NOV }
			152 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 131 }
		NOV = { transfer_state = 152 }
		
	}
	else_if={
		limit = { 
			155 = { is_controlled_by = NOV }
			152 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 155 }
		NOV = { transfer_state = 152 }
		if={
			limit = { 154 = { is_controlled_by = NOV } }
			UKR = { transfer_state = 154 }
		}
		
	}	
	if={
		limit = { 
			136 = { is_controlled_by = NOV }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 136 }
		NOV = { transfer_state = 186 }
		
	}
	if={
		limit = { 
			135 = { is_controlled_by = NOV }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		NOV = { transfer_state = 186 }
		
	}
	if={
		limit = { 
			166 = { is_controlled_by = NOV }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		NOV = { transfer_state = 186 }
	}
	else_if={
		limit = { 
			166 = { is_controlled_by = NOV }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		NOV = { transfer_state = 208 }
	}
	if={
		limit = { 
			135 = { is_controlled_by = NOV }
			186 = { is_controlled_by = NOV }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		NOV = { transfer_state = 208 }
	}
	else_if={
		limit = { 
			146 = { is_controlled_by = NOV }
			186 = { is_controlled_by = NOV }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		NOV = { transfer_state = 208 }
	}
	if={
		limit = { 
			131 = { is_controlled_by = NOV }
			186 = { is_controlled_by = NOV }
			208 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 131 }
		NOV = { transfer_state = 208 }
	}	
	if={
		limit = { 
			103 = { is_controlled_by = NOV }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 103 }
		NOV = { transfer_state = 136 }
	}
	if={
		limit = { 
			109 = { is_controlled_by = NOV }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 109 }
		NOV = { transfer_state = 136 }
	}
	if={
		limit = { 
			166 = { is_controlled_by = NOV }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 166 }
		NOV = { transfer_state = 155 }
	}
	if={
		limit = { 
			146 = { is_controlled_by = NOV }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		NOV = { transfer_state = 155 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = UKR }
			155 = { is_controlled_by = NOV }
		}
		UKR = { transfer_state = 155 }
		NOV = { transfer_state = 208 }
	}
	if={
		limit = { 
			230 = { is_controlled_by = NOV }
			208 = { is_controlled_by = NOV }
			186 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 230 }
		NOV = { transfer_state = 186 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = NOV }
			230 = { is_controlled_by = NOV }
			186 = { is_controlled_by = NOV }
			166 = { is_controlled_by = NOV }
			173 = { is_controlled_by = NOV }
			146 = { is_controlled_by = NOV }
			
			195 = { is_controlled_by = UKR }
			135 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		NOV = { transfer_state = 195 }
	}
	if={
		limit = { 
			152 = { is_controlled_by = NOV }
			146 = { is_controlled_by = NOV }
			
			135 = { is_controlled_by = UKR }
			131 = { is_controlled_by = UKR }
			136 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 146 }
		NOV = { transfer_state = 136 }
	}
	if={
		limit = { 
			135 = { is_controlled_by = NOV }
			146 = { is_controlled_by = NOV }
			136 = { is_controlled_by = NOV }
			
			131 = { is_controlled_by = UKR }
			166 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 135 }
		NOV = { transfer_state = 131 }
	}
	if={
		limit = { 
			208 = { is_controlled_by = NOV }
			173 = { is_controlled_by = NOV }
			
			186 = { is_controlled_by = UKR }
			155 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 208 }
		NOV = { transfer_state = 155 }
	}
	
	
	if={
		limit = { 
			154 = { is_controlled_by = NOV }
			155 = { is_controlled_by = UKR }
			136 = { is_controlled_by = UKR }
			131 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 154 }
	}
	
	if={
		limit = { 
			255 = { is_controlled_by = NOV }
			304 = { is_controlled_by = UKR }
		}
		NOV = { transfer_state = 304 }
	}
	else_if={
		limit = { 
			255 = { is_controlled_by = UKR }
			304 = { is_controlled_by = NOV }
		}
		UKR = { transfer_state = 304 }
	}
	
	if={
		limit = { 
			255 = { is_controlled_by = NOV }
			447 = { is_controlled_by = UKR }
		}
		NOV = { transfer_state = 447 }
	}
	else_if={
		limit = { 
			255 = { is_controlled_by = UKR }
			447 = { is_controlled_by = NOV }
		}
		UKR = { transfer_state = 447 }
	}
	if={
		limit = { 
			136 = { is_controlled_by = NOV }
			173 = { is_controlled_by = UKR }
		}
		UKR = { transfer_state = 136 }
		NOV = { transfer_state = 173 }
	}
	
	if={
		limit = { 
			250 = { is_controlled_by = NOV }
			300 = { is_controlled_by = UKR }
		}
		NOV = { transfer_state = 300 }
	}
	else_if={
		limit = { 
			250 = { is_controlled_by = UKR }
			300 = { is_controlled_by = NOV }
		}
		UKR = { transfer_state = 300 }
	}
	
	
	
	every_country={
		limit={
			OR={
				tag = DON
				tag = LHK
				tag = KHK
				tag = ODS
				tag = NOV
			}
		}
		every_owned_state={
			limit = { NOT = { is_core_of = PREV } }
			UKR={ transfer_state = PREV }	
		}
	}
	
	if={
		limit = { has_global_flag = donetsk_has_capitulated }
		UKR = { annex_country = { target = DON transfer_troops = no } }
	}
	
	if={
		limit = { has_global_flag = luhansk_has_capitulated }
		UKR = { annex_country = { target = LHK transfer_troops = no } }
	}
	
	if={
		limit = { has_global_flag = kharkiv_has_capitulated }
		UKR = { annex_country = { target = KHK transfer_troops = no } }
	}
	
	if={
		limit = { has_global_flag = odesa_has_capitulated }
		UKR = { annex_country = { target = ODS transfer_troops = no } }
	}
	
	if={
		limit = { has_global_flag = novorossiya_has_capitulated }
		UKR = { annex_country = { target = NOV transfer_troops = no } }
	}
}

load_russian_occupation={
	hidden_effect={
		UGE = {
			original_tag = UKR
			every_state={
				limit = {
					OR={
						has_state_flag = akarpatskia_oblast_flag
						has_state_flag = cherkasy_oblast_flag
						has_state_flag = chernihiv_oblast_flag
						has_state_flag = chernivtsi_oblast_flag
						has_state_flag = crimea_oblast_flag
						has_state_flag = dnipro_oblast_flag
						has_state_flag = donetsk_oblast_flag
						has_state_flag = ivano_frankivsk_oblast_flag
						has_state_flag = kharkiv_oblast_flag
						has_state_flag = kherson_oblast_flag
						has_state_flag = khmelnytskyi_oblast_flag
						has_state_flag = kirovohrad_oblast_flag
						has_state_flag = kyiv_oblast_flag
						has_state_flag = luhansk_oblast_flag
						has_state_flag = lviv_oblast_flag
						has_state_flag = mykolaiv_oblast_flag
						has_state_flag = odessa_oblast_flag
						has_state_flag = poltava_oblast_flag
						has_state_flag = rivne_oblast_flag
						has_state_flag = sumy_oblast_flag
						has_state_flag = ternopil_oblast_flag
						has_state_flag = vinnytsia_oblast_flag
						has_state_flag = volyn_oblast_flag
						has_state_flag = zaporizhia_oblast_flag
						has_state_flag = zhytomyr_oblast_flag
					}
				}
				add_core_of = PREV
			}
		}
		country_lock_all_division_template = no
	
		remove_dynamic_modifier = { modifier = UKR_armed_forces_of_ukraine_soviet_doctrine }
		remove_dynamic_modifier = { modifier = UKR_armed_forces_of_ukraine_reforming }
		remove_dynamic_modifier = { modifier = UKR_armed_forces_of_ukraine_western_doctrine }
		remove_dynamic_modifier = { modifier = UKR_air_force_of_ukraine }
		remove_dynamic_modifier = { modifier = UKR_air_force_of_ukraine_reforming }
		remove_dynamic_modifier = { modifier = UKR_navy_of_ukraine }
		remove_dynamic_modifier = { modifier = UKR_sotn_oligarchs }
		remove_dynamic_modifier = { modifier = UKR_sotn_nationalists }
		remove_dynamic_modifier = { modifier = UKR_sotn_pro_russians }
		remove_dynamic_modifier = { modifier = UKR_sotn_liberals }
		
		set_cosmetic_tag = UKR_russian_puppet
		set_global_flag = ukraine_rada_disbanded
		
		add_ideas = {
			ROU_unstable_government
			
			oligarchy
			martial_law
			limited_conscription
			
			state_controlled_press
			bipolarist
			unions_restricted
			womens_rights_traditional_values
			lgbtq_rights_behind_closed_doors
			minority_rights_minor_inequality
			nationalism_laws_pacifist
			firearm_laws_restricted
			alchohol_narcotics_laws_largely_regulated
			religion_law_religious
		}
		
		remove_ideas = UKR_valerii_zaluzhnui
		remove_ideas = UKR_oleksandr_syrskyi
		remove_ideas = UKR_serhiy_popko
		remove_ideas = UKR_mykhailo_zabrodskyi
		remove_ideas = UKR_serhiy_drozdov
		remove_ideas = UKR_serhiy_hayduk
		
		if={
			limit = {
				has_game_rule = {
					rule = UKR_ai_war_behavior
					option = DISHONOUR_BEFORE_DEATH_QUICK_COLLAPSE
				}
			}
			add_ideas = UKR_collapse_quickly
		}
		
		if={
			limit= { NOT = { has_completed_focus = UKR_dishonour_before_death } }
			complete_national_focus = UKR_dishonour_before_death
		}
	}
}

remove_cores={
	hidden_effect={
		random_country={
			limit = { has_cosmetic_tag = UKR_russian_puppet }
			set_variable = { global.russian_occupied_ukraine_tag = THIS }
			every_state={
				limit={ 
					NOT = { state = 92 } 
					OR={
						has_state_flag = akarpatskia_oblast_flag
						has_state_flag = cherkasy_oblast_flag
						has_state_flag = chernihiv_oblast_flag
						has_state_flag = chernivtsi_oblast_flag
						has_state_flag = crimea_oblast_flag
						has_state_flag = dnipro_oblast_flag
						has_state_flag = donetsk_oblast_flag
						has_state_flag = ivano_frankivsk_oblast_flag
						has_state_flag = kharkiv_oblast_flag
						has_state_flag = kherson_oblast_flag
						has_state_flag = khmelnytskyi_oblast_flag
						has_state_flag = kirovohrad_oblast_flag
						has_state_flag = kyiv_oblast_flag
						has_state_flag = luhansk_oblast_flag
						has_state_flag = lviv_oblast_flag
						has_state_flag = mykolaiv_oblast_flag
						has_state_flag = odessa_oblast_flag
						has_state_flag = poltava_oblast_flag
						has_state_flag = rivne_oblast_flag
						has_state_flag = sumy_oblast_flag
						has_state_flag = ternopil_oblast_flag
						has_state_flag = vinnytsia_oblast_flag
						has_state_flag = volyn_oblast_flag
						has_state_flag = zaporizhia_oblast_flag
						has_state_flag = zhytomyr_oblast_flag
					}
				}
				remove_core_of = PREV
				add_claim_by = PREV
				
				force_enable_resistance = { 
					clear = no
					occupier = var:global.russian_occupied_ukraine_tag
					occupied = UGE
				}
				start_resistance = UGE
				
				
				set_variable_to_random = {
					var = resistance_to_add
					min = 35
					max = 50
					integer = yes
				}
				set_variable_to_random = {
					var = compliance_to_add
					min = 0
					max = 5
					integer = yes
				}
				
				set_resistance = var:resistance_to_add
				set_compliance = var:compliance_to_add
				
				clear_variable = resistance_to_add
				clear_variable = compliance_to_add
			}
			country_lock_all_division_template = no
			clear_variable = global.russian_occupied_ukraine_tag 
		}
	}
}

russia_ukraine_peace={		#This is total Ukrainian victory
	SOV = { white_peace = UKR news_event = { id = atd_news.54 days = 2 } }
	clear_russia_ukraine_war_state_modifiers = yes
	clr_global_flag = russia_ukraine_war
	clr_global_flag = a_harsh_war_active_flag
	every_state={
		limit={
			OWNER={
				OR={
					tag = SOV
					is_in_faction_with = SOV
					is_puppet_of = SOV
				}
			}
			OR={
				has_state_flag = akarpatskia_oblast_flag
				has_state_flag = cherkasy_oblast_flag
				has_state_flag = chernihiv_oblast_flag
				has_state_flag = chernivtsi_oblast_flag
				has_state_flag = crimea_oblast_flag
				has_state_flag = dnipro_oblast_flag
				has_state_flag = donetsk_oblast_flag
				has_state_flag = ivano_frankivsk_oblast_flag
				has_state_flag = kharkiv_oblast_flag
				has_state_flag = kherson_oblast_flag
				has_state_flag = khmelnytskyi_oblast_flag
				has_state_flag = kirovohrad_oblast_flag
				has_state_flag = kyiv_oblast_flag
				has_state_flag = luhansk_oblast_flag
				has_state_flag = lviv_oblast_flag
				has_state_flag = mykolaiv_oblast_flag
				has_state_flag = odessa_oblast_flag
				has_state_flag = poltava_oblast_flag
				has_state_flag = rivne_oblast_flag
				has_state_flag = sumy_oblast_flag
				has_state_flag = ternopil_oblast_flag
				has_state_flag = vinnytsia_oblast_flag
				has_state_flag = volyn_oblast_flag
				has_state_flag = zaporizhia_oblast_flag
				has_state_flag = zhytomyr_oblast_flag
			}
		}
		UKR = { transfer_state = PREV }
	}
	country_event = { id = super.2 }
}